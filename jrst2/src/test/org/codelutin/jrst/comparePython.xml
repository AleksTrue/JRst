<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.3.7 -->
<document id="an-introduction-to-restructuredtext" name="an introduction to restructuredtext" source="/home/letellier/PROJET/jrst2/src/test/org/codelutin/jrst/test2.rst"><title>An Introduction to reStructuredText</title><subtitle id="markup-syntax-and-parser-component-of-docutils" name="markup syntax and parser component of docutils">Markup Syntax and Parser Component of Docutils</subtitle><docinfo><author>David Goodger</author><contact><reference refuri="mailto:goodger@python.org">goodger@python.org</reference></contact><revision>1.4</revision><date>2007-05-11</date><copyright>This document has been placed in the public domain.</copyright></docinfo><paragraph><reference name="reStructuredText" refuri="http://docutils.sourceforge.net/rst.html">reStructuredText</reference> is an easy-to-read, what-you-see-is-what-you-get
plaintext markup syntax and parser system.  It is useful for inline
program documentation (such as Python docstrings), for quickly
creating simple web pages, and for standalone documents.
<reference name="reStructuredText" refuri="http://docutils.sourceforge.net/rst.html">reStructuredText</reference> is a proposed revision and reinterpretation of the
<reference name="StructuredText" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/FrontPage">StructuredText</reference> and <reference name="Setext" refuri="http://docutils.sourceforge.net/mirror/setext.html">Setext</reference> lightweight markup systems.</paragraph><paragraph>reStructuredText is designed for extensibility for specific
application domains.  Its parser is a component of <reference name="Docutils" refuri="http://docutils.sourceforge.net/">Docutils</reference>.</paragraph><paragraph>This document defines the <reference name="goals" refid="goals">goals</reference> of reStructuredText and provides a
<reference name="history" refid="history">history</reference> of the project.  It is written using the reStructuredText
markup, and therefore serves as an example of its use.  For a gentle
introduction to using reStructuredText, please read <reference name="A ReStructuredText Primer" refuri="../../user/rst/quickstart.html">A
ReStructuredText Primer</reference>.  The <reference name="Quick reStructuredText" refuri="../../user/rst/quickref.html">Quick reStructuredText</reference> user
reference is also useful.  The <reference name="reStructuredText Markup Specification" refuri="restructuredtext.html">reStructuredText Markup
Specification</reference> is the definitive reference.  There is also an
analysis of the <reference name="Problems With StructuredText" refuri="../../dev/rst/problems.html">Problems With StructuredText</reference>.</paragraph><paragraph>ReStructuredText's web page is
<reference refuri="http://docutils.sourceforge.net/rst.html">http://docutils.sourceforge.net/rst.html</reference>.</paragraph><target id="restructuredtext" name="restructuredtext" refuri="http://docutils.sourceforge.net/rst.html"/><target id="structuredtext" name="structuredtext" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/FrontPage"/><target id="setext" name="setext" refuri="http://docutils.sourceforge.net/mirror/setext.html"/><target id="docutils" name="docutils" refuri="http://docutils.sourceforge.net/"/><target id="a-restructuredtext-primer" name="a restructuredtext primer" refuri="../../user/rst/quickstart.html"/><target id="quick-restructuredtext" name="quick restructuredtext" refuri="../../user/rst/quickref.html"/><target id="restructuredtext-markup-specification" name="restructuredtext markup specification" refuri="restructuredtext.html"/><target id="problems-with-structuredtext" name="problems with structuredtext" refuri="../../dev/rst/problems.html"/><topic class="contents" id="contents" name="contents"><title>Contents</title><bullet_list><list_item><paragraph><reference id="id16" refid="goals">Goals</reference></paragraph></list_item><list_item><paragraph><reference id="id17" refid="history">History</reference></paragraph></list_item></bullet_list></topic><section id="goals" name="goals"><title refid="id16">Goals</title><paragraph>The primary goal of <reference name="reStructuredText" refuri="http://docutils.sourceforge.net/rst.html">reStructuredText</reference> is to define a markup syntax for
use in Python docstrings and other documentation domains, that is
readable and simple, yet powerful enough for non-trivial use.  The
intended purpose of the reStructuredText markup is twofold:</paragraph><bullet_list bullet="-"><list_item><paragraph>the establishment of a set of standard conventions allowing the
expression of structure within plaintext, and</paragraph></list_item><list_item><paragraph>the conversion of such documents into useful structured data
formats.</paragraph></list_item></bullet_list><paragraph>The secondary goal of reStructuredText is to be accepted by the Python
community (by way of being blessed by PythonLabs and the BDFL <footnote_reference auto="1" id="id1" refid="id2">1</footnote_reference>) as
a standard for Python inline documentation (possibly one of several
standards, to account for taste).</paragraph><footnote auto="1" backrefs="id1" id="id2" name="1"><label>1</label><paragraph>Python's creator and &quot;Benevolent Dictator For Life&quot;,
Guido van Rossum.</paragraph></footnote><paragraph>To clarify the primary goal, here are specific design goals, in order,
beginning with the most important:</paragraph><enumerated_list enumtype="arabic" prefix="" suffix="."><list_item><paragraph>Readable.  The marked-up text must be easy to read without any
prior knowledge of the markup language.  It should be as easily
read in raw form as in processed form.</paragraph></list_item><list_item><paragraph>Unobtrusive.  The markup that is used should be as simple and
unobtrusive as possible.  The simplicity of markup constructs
should be roughly proportional to their frequency of use.  The most
common constructs, with natural and obvious markup, should be the
simplest and most unobtrusive.  Less common constructs, for which
there is no natural or obvious markup, should be distinctive.</paragraph></list_item><list_item><paragraph>Unambiguous.  The rules for markup must not be open for
interpretation.  For any given input, there should be one and only
one possible output (including error output).</paragraph></list_item><list_item><paragraph>Unsurprising.  Markup constructs should not cause unexpected output
upon processing.  As a fallback, there must be a way to prevent
unwanted markup processing when a markup construct is used in a
non-markup context (for example, when documenting the markup syntax
itself).</paragraph></list_item><list_item><paragraph>Intuitive.  Markup should be as obvious and easily remembered as
possible, for the author as well as for the reader.  Constructs
should take their cues from such naturally occurring sources as
plaintext email messages, newsgroup postings, and text
documentation such as README.txt files.</paragraph></list_item><list_item><paragraph>Easy.  It should be easy to mark up text using any ordinary text
editor.</paragraph></list_item><list_item><paragraph>Scalable.  The markup should be applicable regardless of the length
of the text.</paragraph></list_item><list_item><paragraph>Powerful.  The markup should provide enough constructs to produce a
reasonably rich structured document.</paragraph></list_item><list_item><paragraph>Language-neutral.  The markup should apply to multiple natural (as
well as artificial) languages, not only English.</paragraph></list_item><list_item><paragraph>Extensible.  The markup should provide a simple syntax and
interface for adding more complex general markup, and custom
markup.</paragraph></list_item><list_item><paragraph>Output-format-neutral.  The markup will be appropriate for
processing to multiple output formats, and will not be biased
toward any particular format.</paragraph></list_item></enumerated_list><paragraph>The design goals above were used as criteria for accepting or
rejecting syntax, or selecting between alternatives.</paragraph><paragraph>It is emphatically <emphasis>not</emphasis> the goal of reStructuredText to define
docstring semantics, such as docstring contents or docstring length.
These issues are orthogonal to the markup syntax and beyond the scope
of this specification.</paragraph><paragraph>Also, it is not the goal of reStructuredText to maintain compatibility
with <reference name="StructuredText" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/FrontPage">StructuredText</reference> or <reference name="Setext" refuri="http://docutils.sourceforge.net/mirror/setext.html">Setext</reference>.  reStructuredText shamelessly steals
their great ideas and ignores the not-so-great.</paragraph><paragraph>Author's note:</paragraph><block_quote><paragraph>Due to the nature of the problem we're trying to solve (or,
perhaps, due to the nature of the proposed solution), the above
goals unavoidably conflict.  I have tried to extract and distill
the wisdom accumulated over the years in the Python <reference name="Doc-SIG" refuri="http://www.python.org/sigs/doc-sig/">Doc-SIG</reference>
mailing list and elsewhere, to come up with a coherent and
consistent set of syntax rules, and the above goals by which to
measure them.</paragraph><paragraph>There will inevitably be people who disagree with my particular
choices.  Some desire finer control over their markup, others
prefer less.  Some are concerned with very short docstrings,
others with full-length documents.  This specification is an
effort to provide a reasonably rich set of markup constructs in a
reasonably simple form, that should satisfy a reasonably large
group of reasonable people.</paragraph><attribution>David Goodger (<reference refuri="mailto:goodger@python.org">goodger@python.org</reference>), 2001-04-20</attribution></block_quote><target id="doc-sig" name="doc-sig" refuri="http://www.python.org/sigs/doc-sig/"/></section><section id="history" name="history"><title refid="id17">History</title><paragraph><reference name="reStructuredText" refuri="http://docutils.sourceforge.net/rst.html">reStructuredText</reference>, the specification, is based on <reference name="StructuredText" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/FrontPage">StructuredText</reference> and
<reference name="Setext" refuri="http://docutils.sourceforge.net/mirror/setext.html">Setext</reference>.  StructuredText was developed by Jim Fulton of <reference name="Zope Corporation" refuri="http://www.zope.com">Zope
Corporation</reference> (formerly Digital Creations) and first released in 1996.
It is now released as a part of the open-source &quot;Z Object Publishing
Environment&quot; (<reference name="ZOPE" refuri="http://www.zope.org">ZOPE</reference>).  Ian Feldman's and Tony Sanders' earlier <reference name="Setext" refuri="http://docutils.sourceforge.net/mirror/setext.html">Setext</reference>
specification was either an influence on StructuredText or, by their
similarities, at least evidence of the correctness of this approach.</paragraph><paragraph>I discovered <reference name="StructuredText" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/FrontPage">StructuredText</reference> in late 1999 while searching for a way to
document the Python modules in one of my projects.  Version 1.1 of
StructuredText was included in Daniel Larsson's <reference name="pythondoc" refuri="http://starship.python.net/crew/danilo/pythondoc/">pythondoc</reference>.  Although
I was not able to get pythondoc to work for me, I found StructuredText
to be almost ideal for my needs.  I joined the Python <reference name="Doc-SIG" refuri="http://www.python.org/sigs/doc-sig/">Doc-SIG</reference>
(Documentation Special Interest Group) mailing list and found an
ongoing discussion of the shortcomings of the StructuredText
&quot;standard&quot;.  This discussion has been going on since the inception of
the mailing list in 1996, and possibly predates it.</paragraph><paragraph>I decided to modify the original module with my own extensions and
some suggested by the Doc-SIG members.  I soon realized that the
module was not written with extension in mind, so I embarked upon a
general reworking, including adapting it to the &quot;re&quot; regular
expression module (the original inspiration for the name of this
project).  Soon after I completed the modifications, I discovered that
StructuredText.py was up to version 1.23 in the ZOPE distribution.
Implementing the new syntax extensions from version 1.23 proved to be
an exercise in frustration, as the complexity of the module had become
overwhelming.</paragraph><paragraph>In 2000, development on <reference name="StructuredTextNG" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/StructuredTextNG">StructuredTextNG</reference> (&quot;Next Generation&quot;) began at
<reference name="Zope Corporation" refuri="http://www.zope.com">Zope Corporation</reference> (then Digital Creations).  It seems to have many
improvements, but still suffers from many of the problems of classic
StructuredText.</paragraph><paragraph>I decided that a complete rewrite was in order, and even started a
<reference name="reStructuredText SourceForge project" refuri="http://structuredtext.sourceforge.net/">reStructuredText SourceForge project</reference> (now inactive).  My
motivations (the &quot;itches&quot; I aim to &quot;scratch&quot;) are as follows:</paragraph><bullet_list bullet="-"><list_item><paragraph>I need a standard format for inline documentation of the programs I
write.  This inline documentation has to be convertible to other
useful formats, such as HTML.  I believe many others have the same
need.</paragraph></list_item><list_item><paragraph>I believe in the Setext/StructuredText idea and want to help
formalize the standard.  However, I feel the current specifications
and implementations have flaws that desperately need fixing.</paragraph></list_item><list_item><paragraph>reStructuredText could form part of the foundation for a
documentation extraction and processing system, greatly benefitting
Python.  But it is only a part, not the whole.  reStructuredText is
a markup language specification and a reference parser
implementation, but it does not aspire to be the entire system.  I
don't want reStructuredText or a hypothetical Python documentation
processor to die stillborn because of over-ambition.</paragraph></list_item><list_item><paragraph>Most of all, I want to help ease the documentation chore, the bane
of many a programmer.</paragraph></list_item></bullet_list><paragraph>Unfortunately I was sidetracked and stopped working on this project.
In November 2000 I made the time to enumerate the problems of
StructuredText and possible solutions, and complete the first draft of
a specification.  This first draft was posted to the Doc-SIG in three
parts:</paragraph><bullet_list bullet="-"><list_item><paragraph><reference anonymous="1" name="A Plan for Structured Text" refuri="http://mail.python.org/pipermail/doc-sig/2000-November/001239.html">A Plan for Structured Text</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="Problems With StructuredText" refuri="http://mail.python.org/pipermail/doc-sig/2000-November/001240.html">Problems With StructuredText</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="reStructuredText: Revised Structured Text Specification" refuri="http://mail.python.org/pipermail/doc-sig/2000-November/001241.html">reStructuredText: Revised Structured Text Specification</reference></paragraph></list_item></bullet_list><target anonymous="1" id="id3" refuri="http://mail.python.org/pipermail/doc-sig/2000-November/001239.html"/><target anonymous="1" id="id4" refuri="http://mail.python.org/pipermail/doc-sig/2000-November/001240.html"/><target anonymous="1" id="id5" refuri="http://mail.python.org/pipermail/doc-sig/2000-November/001241.html"/><paragraph>In March 2001 a flurry of activity on the Doc-SIG spurred me to
further revise and refine my specification, the result of which you
are now reading.  An offshoot of the reStructuredText project has been
the realization that a single markup scheme, no matter how well
thought out, may not be enough.  In order to tame the endless debates
on Doc-SIG, a flexible <reference name="Docstring Processing System framework" refuri="../../peps/pep-0256.html">Docstring Processing System framework</reference> needed
to be constructed.  This framework has become the more important of
the two projects; <reference name="reStructuredText" refuri="http://docutils.sourceforge.net/rst.html">reStructuredText</reference> has found its place as one
possible choice for a single component of the larger framework.</paragraph><paragraph>The project web site and the first project release were rolled out in
June 2001, including posting the second draft of the spec <footnote_reference auto="1" id="id6" refid="spec-2">2</footnote_reference>
and the first draft of PEPs 256, 257, and 258 <footnote_reference auto="1" id="id7" refid="peps-1">3</footnote_reference> to the
Doc-SIG.  These documents and the project implementation proceeded to
evolve at a rapid pace.  Implementation history details can be found
in the <reference name="project history file" refuri="../../../HISTORY.html">project history file</reference>.</paragraph><paragraph>In November 2001, the reStructuredText parser was nearing completion.
Development of the parser continued with the addition of small
convenience features, improvements to the syntax, the filling in of
gaps, and bug fixes.  After a long holiday break, in early 2002 most
development moved over to the other Docutils components, the
&quot;Readers&quot;, &quot;Writers&quot;, and &quot;Transforms&quot;.  A &quot;standalone&quot; reader
(processes standalone text file documents) was completed in February,
and a basic HTML writer (producing HTML 4.01, using CSS-1) was
completed in early March.</paragraph><paragraph><reference name="PEP 287" refuri="../../peps/pep-0287.html">PEP 287</reference>, &quot;reStructuredText Standard Docstring Format&quot;, was created
to formally propose reStructuredText as a standard format for Python
docstrings, PEPs, and other files.  It was first posted to
<reference name="comp.lang.python" refuri="news:comp.lang.python">comp.lang.python</reference> and the <reference name="Python-dev" refuri="http://mail.python.org/pipermail/python-dev/">Python-dev</reference> mailing list on 2002-04-02.</paragraph><paragraph>Version 0.4 of the <reference anonymous="1" name="reStructuredText" refuri="http://structuredtext.sourceforge.net/">reStructuredText</reference> and <reference name="Docstring Processing System" refuri="http://docstring.sourceforge.net/">Docstring Processing
System</reference> projects were released in April 2002.  The two projects were
immediately merged, renamed to &quot;<reference name="Docutils" refuri="http://docutils.sourceforge.net/">Docutils</reference>&quot;, and a 0.1 release soon
followed.</paragraph><target anonymous="1" id="id8" refuri="http://structuredtext.sourceforge.net/"/><footnote auto="1" backrefs="id6" id="spec-2" name="spec-2"><label>2</label><paragraph>The second draft of the spec:</paragraph><bullet_list bullet="-"><list_item><paragraph><reference anonymous="1" name="An Introduction to reStructuredText" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001858.html">An Introduction to reStructuredText</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="Problems With StructuredText" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001859.html">Problems With StructuredText</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="reStructuredText Markup Specification" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001860.html">reStructuredText Markup Specification</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="Python Extensions to the reStructuredText Markup Specification" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001861.html">Python Extensions to the reStructuredText Markup Specification</reference></paragraph></list_item></bullet_list><target anonymous="1" id="id9" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001858.html"/><target anonymous="1" id="id10" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001859.html"/><target anonymous="1" id="id11" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001860.html"/><target anonymous="1" id="id12" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001861.html"/></footnote><footnote auto="1" backrefs="id7" id="peps-1" name="peps-1"><label>3</label><paragraph>First drafts of the PEPs:</paragraph><bullet_list bullet="-"><list_item><paragraph><reference anonymous="1" name="PEP 256: Docstring Processing System Framework" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001855.html">PEP 256: Docstring Processing System Framework</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="PEP 258: DPS Generic Implementation Details" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001856.html">PEP 258: DPS Generic Implementation Details</reference></paragraph></list_item><list_item><paragraph><reference anonymous="1" name="PEP 257: Docstring Conventions" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001857.html">PEP 257: Docstring Conventions</reference></paragraph></list_item></bullet_list><paragraph>Current working versions of the PEPs can be found in
<reference refuri="http://docutils.sourceforge.net/docs/peps/">http://docutils.sourceforge.net/docs/peps/</reference>, and official versions
can be found in the <reference name="master PEP repository" refuri="http://www.python.org/peps/">master PEP repository</reference>.</paragraph><target anonymous="1" id="id13" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001855.html"/><target anonymous="1" id="id14" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001856.html"/><target anonymous="1" id="id15" refuri="http://mail.python.org/pipermail/doc-sig/2001-June/001857.html"/></footnote><target id="zope-corporation" name="zope corporation" refuri="http://www.zope.com"/><target id="zope" name="zope" refuri="http://www.zope.org"/><target id="restructuredtext-sourceforge-project" name="restructuredtext sourceforge project" refuri="http://structuredtext.sourceforge.net/"/><target id="pythondoc" name="pythondoc" refuri="http://starship.python.net/crew/danilo/pythondoc/"/><target id="structuredtextng" name="structuredtextng" refuri="http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/StructuredTextNG"/><target id="project-history-file" name="project history file" refuri="../../../HISTORY.html"/><target id="pep-287" name="pep 287" refuri="../../peps/pep-0287.html"/><target id="docstring-processing-system-framework" name="docstring processing system framework" refuri="../../peps/pep-0256.html"/><target id="comp-lang-python" name="comp.lang.python" refuri="news:comp.lang.python"/><target id="python-dev" name="python-dev" refuri="http://mail.python.org/pipermail/python-dev/"/><target id="docstring-processing-system" name="docstring processing system" refuri="http://docstring.sourceforge.net/"/><target id="master-pep-repository" name="master pep repository" refuri="http://www.python.org/peps/"/><comment xml:space="preserve">Local Variables:
mode: indented-text
indent-tabs-mode: nil
sentence-end-double-space: t
fill-column: 70
End:</comment></section></document>